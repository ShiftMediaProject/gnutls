diff --git a/gnulib b/gnulib
index 41d5dae3b..3639c57a9 160000
--- a/gnulib
+++ b/gnulib
@@ -1 +1 @@
-Subproject commit 41d5dae3b7d239f167f09e4398f3970845a0ddc0
+Subproject commit 3639c57a970191e0bf7a9789bd1341786d0255a1
diff --git a/lib/accelerated/x86/x86-common.c b/lib/accelerated/x86/x86-common.c
index 3b779865e..6bd1bcb1b 100644
--- a/lib/accelerated/x86/x86-common.c
+++ b/lib/accelerated/x86/x86-common.c
@@ -40,6 +40,35 @@
 #include "aes-padlock.h"
 #ifdef HAVE_CPUID_H
 #include <cpuid.h>
+#elif defined(_MSC_VER)
+#define HAVE_GET_CPUID_COUNT
+#include <intrin.h>
+static __inline int
+__get_cpuid(unsigned int __leaf,
+	unsigned int* __eax, unsigned int* __ebx,
+	unsigned int* __ecx, unsigned int* __edx)
+{
+	int regs[4];
+	__cpuid(regs, __leaf);
+	*__eax = (uint32_t)regs[0];
+	*__ebx = (uint32_t)regs[1];
+	*__ecx = (uint32_t)regs[2];
+	*__edx = (uint32_t)regs[3];
+	return 1;
+}
+static __inline int
+__get_cpuid_count(unsigned int __leaf, unsigned int __subleaf,
+	unsigned int* __eax, unsigned int* __ebx,
+	unsigned int* __ecx, unsigned int* __edx)
+{
+	int regs[4];
+	__cpuidex(regs, __leaf, __subleaf);
+	*__eax = (uint32_t)regs[0];
+	*__ebx = (uint32_t)regs[1];
+	*__ecx = (uint32_t)regs[2];
+	*__edx = (uint32_t)regs[3];
+	return 1;
+}
 #else
 #define __get_cpuid(...) 0
 #define __get_cpuid_count(...) 0
diff --git a/lib/debug.c b/lib/debug.c
index 53a142cf5..64bdec841 100644
--- a/lib/debug.c
+++ b/lib/debug.c
@@ -31,7 +31,11 @@
 void _gnutls_dump_mpi(const char *prefix, bigint_t a)
 {
 	char buf[400];
+#if defined(_MSC_VER)
+	char* buf_hex = (char*)_alloca((2 * sizeof(buf) + 1) * sizeof(char));
+#else
 	char buf_hex[2 * sizeof(buf) + 1];
+#endif
 	size_t n = sizeof buf;
 
 	if (_gnutls_mpi_print(a, buf, &n))
@@ -43,7 +47,11 @@ void _gnutls_dump_mpi(const char *prefix, bigint_t a)
 
 void _gnutls_dump_vector(const char *prefix, const uint8_t *a, size_t a_size)
 {
+#if defined(_MSC_VER)
+	char* buf_hex = (char*)_alloca((2 * a_size + 1) * sizeof(char));
+#else
 	char buf_hex[2 * a_size + 1];
+#endif
 
 	_gnutls_debug_log("Vector: length: %d\n\t%s%s\n", (int)a_size, prefix,
 			  _gnutls_bin2hex(a, a_size, buf_hex, sizeof(buf_hex),
diff --git a/lib/ext/pre_shared_key.c b/lib/ext/pre_shared_key.c
index 51c4891d5..da8683cc2 100644
--- a/lib/ext/pre_shared_key.c
+++ b/lib/ext/pre_shared_key.c
@@ -80,7 +80,7 @@ static const char *get_binder_label(enum binder_type type, size_t *size)
 	static const char ext_label[] = EXT_BINDER_LABEL;
 	static const char res_label[] = RES_BINDER_LABEL;
 	static const char imp_label[] = IMP_BINDER_LABEL;
-	const char *label;
+	const char *label = NULL;
 
 	switch (type) {
 	case BINDER_EXT:
diff --git a/lib/global.c b/lib/global.c
index 718740c10..fdd331940 100644
--- a/lib/global.c
+++ b/lib/global.c
@@ -497,7 +497,8 @@ const char *gnutls_check_version(const char *req_version)
 	return NULL;
 }
 
-static void _CONSTRUCTOR lib_init(void)
+CONSTRUCTOR_ATTRIBUTE(lib_init);
+static void lib_init(void)
 {
 	int ret;
 	const char *e;
@@ -529,7 +530,8 @@ static void _CONSTRUCTOR lib_init(void)
 	}
 }
 
-static void _DESTRUCTOR lib_deinit(void)
+DESTRUCTOR_ATTRIBUTE(lib_deinit);
+static void lib_deinit(void)
 {
 	int ret;
 	const char *e;
diff --git a/lib/includes/gnutls/gnutls.h.in b/lib/includes/gnutls/gnutls.h.in
index e31aad3a0..66fe3789d 100644
--- a/lib/includes/gnutls/gnutls.h.in
+++ b/lib/includes/gnutls/gnutls.h.in
@@ -37,7 +37,13 @@
 #define GNUTLS_GNUTLS_H
 
 /* Get ssize_t. */
-#include <sys/types.h>
+#ifdef _MSC_VER
+#  include <BaseTsd.h>
+typedef SSIZE_T ssize_t;
+#  include <sys/types.h>
+#else
+#  include <sys/types.h>
+#endif
 
 /* Get size_t. */
 #include <stddef.h>
diff --git a/lib/system/fastopen.c b/lib/system/fastopen.c
index 7132a0817..f62907966 100644
--- a/lib/system/fastopen.c
+++ b/lib/system/fastopen.c
@@ -26,7 +26,9 @@
 #include "errors.h"
 
 #include <sys/socket.h>
+#ifdef HAVE_NETINET_IN_H
 #include <netinet/in.h> /* IPPROTO_TCP */
+#endif
 #include <errno.h>
 #include <sys/stat.h>
 #include <sys/types.h>
diff --git a/lib/x509/hostname-verify.c b/lib/x509/hostname-verify.c
index 04e17aa23..fd66d24f8 100644
--- a/lib/x509/hostname-verify.c
+++ b/lib/x509/hostname-verify.c
@@ -26,8 +26,10 @@
 #include "common.h"
 #include "errors.h"
 #include "system.h"
+#ifndef _MSC_VER
 #include <netinet/in.h>
 #include <arpa/inet.h>
+#endif
 
 /**
  * gnutls_x509_crt_check_hostname:
diff --git a/lib/x509/ip.c b/lib/x509/ip.c
index 536b75c10..8ff65b992 100644
--- a/lib/x509/ip.c
+++ b/lib/x509/ip.c
@@ -24,7 +24,9 @@
 #include "gnutls_int.h"
 #include "ip.h"
 #include <gnutls/x509.h>
+#ifndef _MSC_VER
 #include <arpa/inet.h>
+#endif
 
 /*-
  * _gnutls_mask_to_prefix:
diff --git a/lib/x509/verify-high2.c b/lib/x509/verify-high2.c
index 9fd73e487..3c494c85a 100644
--- a/lib/x509/verify-high2.c
+++ b/lib/x509/verify-high2.c
@@ -465,7 +465,9 @@ static int load_dir_certs(const char *dirname, gnutls_x509_trust_list_t list,
 			switch (d->d_type) {
 			case DT_REG:
 			case DT_LNK:
+#  if DT_LNK != DT_UNKNOWN
 			case DT_UNKNOWN:
+#  endif
 				break;
 			default:
 				continue;
diff --git a/lib/x509/x509_ext.c b/lib/x509/x509_ext.c
index ad3af1430..ba373e582 100644
--- a/lib/x509/x509_ext.c
+++ b/lib/x509/x509_ext.c
@@ -3539,7 +3539,7 @@ static const struct sct_sign_algorithm_st algos[] = {
 
 static gnutls_sign_algorithm_t get_sigalg(uint8_t hash_algo, uint8_t sig_algo)
 {
-	const struct sct_sign_algorithm_st *algo;
+	const struct sct_sign_algorithm_st *algo = NULL;
 	size_t i, num_algos = sizeof(algos) / sizeof(algos[0]);
 
 	if (hash_algo == 0 || sig_algo == 0)

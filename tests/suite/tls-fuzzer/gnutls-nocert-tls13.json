[
    {"server_command": ["@SERVER@", "--http",
                 "--x509keyfile", "tests/serverX509Key.pem",
                 "--x509certfile", "tests/serverX509Cert.pem",
                 "--x509keyfile", "tests/serverRSAPSSKey.pem",
                 "--x509certfile", "tests/serverRSAPSSCert.pem",
                 "--x509keyfile", "tests/serverECKey.pem",
                 "--x509certfile", "tests/serverECCert.pem",
                 "--x509keyfile", "tests/serverP384ECKey.pem",
                 "--x509certfile", "tests/serverP384ECCert.pem",
                 "--x509keyfile", "tests/serverP521ECKey.pem",
                 "--x509certfile", "tests/serverP521ECCert.pem",
                 "--debug=6",
                 "--httpdata=../http.dat",
                 "--priority=@PRIORITY@",
                 "--disable-client-cert", "--port=@PORT@"],
     "server_hostname": "localhost",
     "server_port": @PORT@,
     "tests" : [
         {"name" : "test-record-size-limit.py",
          "comment" : "changed extension after HRR is not supported #617",
          "arguments" : ["-p", "@PORT@", "--reply-AD-size", "1024",
			"--minimal-size", "512",
			"-e", "change size in TLS 1.2 resumption",
			"-e", "check if server accepts maximum size in TLS 1.0",
			"-e", "check if server accepts maximum size in TLS 1.1",
			"-e", "check if server accepts maximum size in TLS 1.2",
			"-e", "check if server accepts minimal size in TLS 1.0",
			"-e", "check if server accepts minimal size in TLS 1.1",
			"-e", "check if server accepts minimal size in TLS 1.2",
			"-x", "check interaction with sha256 prf",
			"-X", "Unexpected message from peer: Alert(fatal, handshake_failure)",
			"-e", "check server sent size in TLS 1.0",
			"-e", "check server sent size in TLS 1.1",
			"-e", "check server sent size in TLS 1.2",
			"-e", "drop extension in TLS 1.2 resumption",
			"-x", "modified extension in 2nd CH in HRR handshake",
			"-X", "Unexpected message from peer: Handshake(server_hello)",
			"-e", "renegotiation with dropped extension",
			"-x", "added extension in 2nd CH in HRR handshake",
			"-X", "Unexpected message from peer: Handshake(server_hello)",
			"-e", "check server sent size in TLS 1.0 with max_fragment_length",
			"-e", "check server sent size in TLS 1.1 with max_fragment_length",
			"-e", "check server sent size in TLS 1.2 with max_fragment_length",
			"-x", "removed extension in 2nd CH in HRR handshake",
			"-X", "Unexpected message from peer: Handshake(server_hello)"] },
	 {"name" : "test-tls13-0rtt-garbage.py",
	  "arguments": ["-p", "@PORT@"]},
	 {"name" : "test-tls13-ccs.py",
	  "arguments": ["-p", "@PORT@"]},
	 {"name" : "test-tls13-crfg-curves.py",
	  "arguments": ["-p", "@PORT@"]},
	 {"name" : "test-tls13-conversation.py",
	  "arguments": ["-p", "@PORT@"]},
	 {"name" : "test-tls13-count-tickets.py",
	  "arguments": ["-p", "@PORT@", "-t", "2"]},
	 {"name" : "test-tls13-dhe-shared-secret-padding.py",
	  "arguments": ["-p", "@PORT@"]},
	 {"name" : "test-tls13-ecdhe-curves.py",
	  "arguments": ["-p", "@PORT@"]},
	 {"name" : "test-tls13-ecdsa-support.py",
	  "arguments": ["-p", "@PORT@"]},
	 {"name" : "test-tls13-empty-alert.py",
	  "arguments": ["-p", "@PORT@"]},
	 {"name" : "test-tls13-ffdhe-groups.py",
	  "comment" : "We do not check for duplicate entries",
	  "arguments": ["-p", "@PORT@",
			"-x", "ffdhe2048 - duplicated key share entry",
			"-X", "Unexpected message from peer: Handshake(server_hello)",
			"-x", "ffdhe3072 - duplicated key share entry",
			"-X", "Unexpected message from peer: Handshake(server_hello)",
			"-x", "ffdhe4096 - duplicated key share entry",
			"-X", "Unexpected message from peer: Handshake(server_hello)",
			"-x", "ffdhe6144 - duplicated key share entry",
			"-X", "Unexpected message from peer: Handshake(server_hello)",
			"-x", "ffdhe8192 - duplicated key share entry",
			"-X", "Unexpected message from peer: Handshake(server_hello)",
			"-t", "180"]},
	 {"name" : "test-tls13-ffdhe-sanity.py",
	  "arguments": ["-p", "@PORT@",
			"-t", "180"]},
	 {"name" : "test-tls13-finished.py",
	  "comment" : "the disabled tests timeout very often due to slow tls-fuzzer implementation",
	  "arguments": ["-p", "@PORT@",
			"-e", "padding - cipher TLS_AES_128_GCM_SHA256, pad_byte 0, pad_left 0, pad_right 16777183",
			"-e", "padding - cipher TLS_AES_256_GCM_SHA384, pad_byte 0, pad_left 0, pad_right 16777167"]},
	 {"name" : "test-tls13-hrr.py",
	  "arguments": ["-p", "@PORT@"]},
	 {"name" : "test-tls13-invalid-ciphers.py",
	  "arguments": ["-p", "@PORT@"]},
	 {"name" : "test-tls13-keyshare-omitted.py",
	  "arguments": ["-p", "@PORT@"]},
	 {"name" : "test-tls13-keyupdate.py",
	  "comment" : "we have limits that prohibit the running multiple messages test; app data split timeouts waiting for new session ticket",
	  "arguments": ["-p", "@PORT@",
			"-e", "app data split, conversation with KeyUpdate msg",
			"-e", "multiple KeyUpdate messages"]},
	 {"name" : "test-tls13-large-number-of-extensions.py",
	  "comment" : "This test assumes that 22 (EtM) is unassigned which is incorrect - see #632",
	  "arguments": ["-p", "@PORT@",
			"--exc", "11",
			"--exc", "12",
			"--exc", "22",
			"--exc", "23"]},
	 {"name" : "test-tls13-legacy-version.py",
	  "arguments": ["-p", "@PORT@"]},
	 {"name" : "test-tls13-nociphers.py",
	  "arguments": ["-p", "@PORT@"]},
	 {"name" : "test-tls13-non-support.py",
	  "arguments": ["-p", "@PORT@"],
	  "exp_pass" : false},
	 {"name" : "test-tls13-pkcs-signature.py",
	  "arguments": ["-p", "@PORT@"]},
	 {"name" : "test-tls13-record-padding.py",
	  "arguments": ["-p", "@PORT@"]},
	 {"name" : "test-tls13-rsapss-signatures.py",
	  "arguments": ["-p", "@PORT@", "-b"]},
	 {"name" : "test-tls13-rsa-signatures.py",
	  "arguments": ["-p", "@PORT@", "-b"]},
	 {"name" : "test-tls13-session-resumption.py",
	  "arguments": ["-p", "@PORT@"]},
	 {"name" : "test-tls13-serverhello-random.py",
	  "arguments": ["-p", "@PORT@"]},
	 {"name" : "test-tls13-signature-algorithms.py",
          "comment" : "gnutls doesn't handle well duplicated signature algorithms; this is not an issue in practice",
	  "arguments": ["-p", "@PORT@",
			"-x", "213 invalid schemes",
			"-X", "Unexpected message from peer: Alert(fatal, handshake_failure)",
			"-x", "2353 invalid schemes",
			"-X", "Unexpected message from peer: Alert(fatal, handshake_failure)",
			"-x", "8130 invalid schemes",
			"-X", "Unexpected message from peer: Alert(fatal, handshake_failure)",
			"-x", "23752 invalid schemes",
			"-X", "Unexpected message from peer: Alert(fatal, handshake_failure)",
			"-x", "32715 invalid schemes",
			"-X", "Unexpected message from peer: Alert(fatal, handshake_failure)"]},
	 {"name" : "test-tls13-symetric-ciphers.py",
	  "arguments": ["-p", "@PORT@"]},
	 {"name" : "test-tls13-unrecognised-groups.py",
	  "arguments": ["-p", "@PORT@"]},
	 {"name" : "test-tls13-version-negotiation.py",
	  "arguments": ["-p", "@PORT@"]},
	 {"name" : "test-tls13-zero-length-data.py",
	  "arguments": ["-p", "@PORT@"]},
	 {"name" : "test-downgrade-protection.py",
	  "comment" : "1/n-1 splitting in TLS 1.0 is not supported",
	  "arguments": ["-p", "@PORT@", "--server-max-protocol", "TLSv1.3",
			"-x", "TLS 1.3 downgrade check for Protocol (3, 1)",
			"-X", "Unexpected message from peer: Alert(fatal, protocol_version)"]}
     ]
    }
]
